name: CI/CD to Azure AKS

on:
  push:
    branches:
      - main # Trigger on push to the main branch

# Environment variables for the workflow
env:
  ACR_NAME: ${{ secrets.ACR_NAME }}
  IMAGE_NAME: pritam-web
  TAG: ${{ github.sha }} # Use Git SHA as the unique tag
  
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # ------------------
    # CI: Build and Push
    # ------------------
    - name: Azure Login
      uses: azure/login@v2
      with:
        # The 'creds' input expects the full JSON string
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # -----------------------------------------------------------------------
    # FIX: We use fromJson() to parse the AZURE_CREDENTIALS secret string
    # into an object so we can access .clientId and .clientSecret properties.
    # -----------------------------------------------------------------------
    - name: ACR Login
      uses: azure/docker-login@v2
      with:
        login-server: ${{ env.ACR_NAME }}.azurecr.io
        # Use fromJson to correctly retrieve the Service Principal ID for username
        username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        # Use fromJson to correctly retrieve the Service Principal Secret for password
        password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

    - name: Build and push Docker image to ACR
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }} .
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}

    # ------------------
    # CD: Deploy to AKS
    # ------------------
    - name: Set up kubectl
      uses: azure/aks-set-context@v4
      with:
        resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
        
    - name: Deploy to AKS
      uses: azure/k8s-deploy@v5
      with:
        # Update the deployment manifest with the new image tag
        manifests: |
          k8s/deployment.yaml
          k8s/service.yaml
        images: |
          ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}
        # Wait for the rollout to complete
        rollout-status: true

